导入数据 ReadData.m
clc,clear all
fid = fopen('E:\大学资料\2019年国赛数模\Text 2019.8.10\cumcm2007\2007高教社杯全国大学生数学建模竞赛题目\B2007data\1.1 公汽线路信息.txt','r');
i=1;
while 1
tline = fgetl(fid); %fgetl函数 一次仅读入一行，并返回这一行的字符串
if ~ischar(tline)
break
end % ischar:Determine whether item is character array(字符数组)
if strcmp(tline,'') % strcmp:Compare strings（比较两个输入字符串是否相等）
continue
end
if strcmp(tline(1),'L')
str=tline;
continue
elseif strcmp(tline,'END')
    break
end
if strcmp(tline,'单一票制1元。')
P=1;
continue
elseif strcmp(tline,'分段计价。')
P=2;
continue
end
if strcmp(tline(1:2),'上行')
L{i,1}=str;
L{i,2}=P;
L{i,3}='上行';
L{i,4}=tline(3:end);
i=i+1;
continue
elseif strcmp(tline(1:2),'下行')
L{i,1}=str;
L{i,2}=P;
L{i,3}='下行';
L{i,4}=tline(3:end);
i=i+1;
continue
elseif strcmp(tline(1:2),'环行')
L{i,1}=str;
L{i,2}=P;
L{i,3}='环行1';
L{i,4}=strcat(tline(4:end),tline(9:end));
i=i+1;
%计算来回
L{i,1}=str;
L{i,2}=P;
L{i,3}='环行2';
L{i,4}=strcat(tline(4:end),tline(9:end));
i=i+1;
continue
elseif strcmp(tline(1),'S')
L{i,1}=str;
L{i,2}=P;
L{i,3}='来回1';
L{i,4}=tline;
i=i+1;
%计算来回
L{i,1}=str;
L{i,2}=P;
L{i,3}='来回2';
L{i,4}=tline;
i=i+1;
continue
end
end
fclose(fid);

for i=1:size(L,1)
tline=L{i,4};
t=findstr(tline,'S'); %在一个长的字符串里面找到一个子串；
temp=zeros(1,length(t));
if strcmp(L{i,3},'来回2') || strcmp(L{i,3},'环行2')
for j=length(t):-1:1
temp(length(t)-j+1)=str2double(tline(t(j)+1:t(j)+4));
end
else
for j=1:length(t)
temp(j)=str2double(tline(t(j)+1:t(j)+4));
end
end
L2{i,1}=temp;
end

for i=1:3957
if floor(i/10)==0
Cit{i}=strcat('S000',num2str(i));
elseif floor(i/100)==0
Cit{i}=strcat('S00',num2str(i));
elseif floor(i/1000)==0
Cit{i}=strcat('S0',num2str(i));
else
Cit{i}=strcat('S',num2str(i));
end
end 

longest_stops=0;%寻找最长的线路站点
B=[];%将站点信息存入矩阵中

for i=1:length(L2)
    c=L2{i,1:1};
  if (longest_stops<length(c))
      longest_stops=length(c);
  end
end
for i=1:length(L2)
    A=L2{i,1:1};
    A1=zeros(1,longest_stops-length(A));
    A=[A A1];
    B=[B;A];
end
换乘一次 
clear all;clc;
ReadData;%将数据处理
stop_start=input('please input the start stop:');
stop_final=input('please input the final stop:');
line_start=zeros(length(L2),1);%记录经过目标起始站的线路
line_final=zeros(length(L2),1);%记录经过目标终点站的线路
lines_way=zeros(length(L2),1);
for i=1:length(B)
    k1=find((B(i,:)==stop_start));
    if (~isempty(k1))
     line_start(i,1)=k1(1);
    end
     k2=find((B(i,:)==stop_final));
     if (~isempty(k2))
     line_final(i,1)=k2(1);
     end
end
lines_way1=[];
for i=1:length(B)
   if(line_start(i)>0)
       for j=1:length(B)
          if(line_final(j)>0)
              for i1=1:length(B(i,:))
                  for j1=1:length(B(j,:))
                      if(B(i,i1)==B(j,j1)&i1>line_start(i)&j1<line_final(j))
                          if i1-line_start(i)>0 & i1-line_start(i)<20
                              q=1;
                          elseif i1-line_start(i)>=20 & i1-line_start(i)<40
                              q=2;
                          elseif i1-line_start(i)>=40
                              q=3;
                          end
                          if line_final(j)-j1>0 & line_final(j)-j1<20
                              e=1;
                          elseif line_final(j)-j1>=20 & line_final(j)-j1<40
                              e=2;
                          elseif line_final(j)-j1>=40
                              e=3;
                          end
                            a=[i,j,stop_start,B(i,i1),stop_final,i1-line_start(i)+line_final(j)-j1,i1-line_start(i),line_final(j)-j1,(i1-line_start(i)+line_final(j)-j1)*3+5,q+e]; 
                            %(起始线路，终点线路，起始站，转站1，终点站，前一段站的个数，后一段站的个数，总计时长，起始线路上下行)
                            lines_way1=[lines_way1;a];
                      end
                  end
              end
          end
       end
   end
end
[chang,kuan]=size(lines_way1);
lines_way1_id=[];
for k=1:chang
    lines_way1(k,1)=floor((lines_way1(k,1)/2));
    lines_way1(k,2)=floor((lines_way1(k,2)/2));
    k=k+1;
end
for k=1:chang
    if mod(lines_way1(k,1),2)==1
        lines_way1_id{k,1}='上行';
    elseif mod(lines_way1(k,1),2)==0
        lines_way1_id{k,1}='下行';
    end
    if mod(lines_way1(k,2),2)==1
        lines_way1_id{k,2}='上行';
    elseif mod(lines_way1(k,2),2)==0
        lines_way1_id{k,2}='下行';
    end
    k=k+1;
end
str_lines_way1=lines_way1;
final_lines_way=[];
for k=1:chang
    for l=1:kuan
        final_lines_way1{k,l}=num2str(str_lines_way1(k,l));
        l=l+1;
    end
    k=k+1;
end
if(~isempty(lines_way1))
    str_lines_way1=cat(2,final_lines_way1,lines_way1_id);
    disp(str_lines_way1)
else
    disp('no such way')
end
换乘2次
clear all;clc;
ReadData;%将数据处理
stop_start=input('please input the start stop:');
stop_final=input('please input the final stop:');
lines_start=zeros(length(L2),1);%记录经过目标起始站的线路
lines_final=zeros(length(L2),1);%记录经过目标终点站的线路
lines_way2=zeros(length(L2),1);
lines_ant_start=zeros(length(L2),1);
lines_ant_final=zeros(length(L2),1);

for i=1:length(B)
    k1=find((B(i,:)==stop_start));
    if (~isempty(k1))
     lines_start(i,1)=k1(1);
    end
     k2=find((B(i,:)==stop_final));
     if (~isempty(k2))
     lines_final(i,1)=k2(1);
     end
end
lines_way_2=[];
jlu_s=find(lines_start>0);
jlu_f=find(lines_final>0);
for i=1:length(jlu_s)
     for j=1:length(jlu_f)
          for i1=(lines_start(jlu_s(i),1))+1:length(B(jlu_s(i),:))
                if(B(jlu_s(i),i1)>0)
                  for j1=lines_final(jlu_f(j),1)-1:-1:1
                      if(B(jlu_f(j),j1)>0)
                        for j2=1:length(B)
                            if((j2~=j1)&(j2~=i1))
                                 k3=find((B(j2,:)==B(i,i1)));
                                 if (~isempty(k3))
                                      lines_ant_start(i,1)=k3(1);
                                 end
                                 k4=find((B(j2,:)==B(j,j1)));
                                 if (~isempty(k4))
                                      lines_ant_final(i,1)=k4(1);
                                 end
                            end
                        end
                        for i2=1:length(B)
                             if((lines_ant_start(i,1)>0)&(lines_ant_final(i,1)>0)&(lines_ant_start(i,1)<lines_ant_final(i,1)))
                                  lines_way2(i,1) =lines_ant_final(i,1)-lines_ant_start(i,1);
                             end
                        end
                       
                       end
                  end
              end
          end
          if(~isempty(lines_way2))
                           for i3=1:length(lines_way2)
                               if(lines_way2(i3,1)~=0)
                               a_1=[jlu_s(i),i3,jlu_f(j),stop_start,B(i3,lines_ant_start(i3,1)),B(i3,lines_ant_final(i3,1)),stop_final];
                               lines_way_2=[lines_way_2;a_1];
                               end
                           end
                       end
       end
end
          
if(~isempty(lines_way_2))
    %if(lines_way_2(i,12)==min(lines(:,12)))
    %for i=1:length(lines_way(:,1))
        %f=(L{jlu_s(i),2}==1)+(L{jlu_s(i),2}==2)*(((ceil(m/20)>2)*3+(ceil(m/20)<=2)*ceil(m/20)))
    lines_way_2
else
    disp('no such way')
end
